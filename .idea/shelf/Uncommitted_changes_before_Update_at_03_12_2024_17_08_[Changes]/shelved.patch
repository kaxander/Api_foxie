Index: app.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import json\r\nfrom flask import Flask, request, Response\r\nfrom sqlalchemy import select, func\r\n\r\nfrom model import *\r\n\r\napp = Flask(__name__)\r\n\r\n\r\n@app.route('/')\r\ndef hello_world():  # put application's code here\r\n    return 'Hello World!'\r\n\r\n\r\n# @app.route('/admins', methods=['GET'])\r\n# def ListAllAdmins():\r\n#     try:\r\n#         admin = select(Admin).select_from(Admin)\r\n#         print(admin)\r\n#         admin = db_session.execute(admin).scalars()\r\n#         result = []\r\n#         for consulta in admin:\r\n#             result.append(consulta.serialize())\r\n#         final = json.dumps(result)\r\n#         return Response(\r\n#             final,\r\n#             status=200,\r\n#             mimetype='application/json'\r\n#         )\r\n#     except Exception as e:\r\n#         final = {\r\n#             'status': 'error',\r\n#             'message': str(e)\r\n#         }\r\n#         return Response(\r\n#             response=json.dumps(final)\r\n#         )\r\n#\r\n#\r\n# @app.route('/admin/<int:id>', methods=['GET'])\r\n# def listAdminById(id):\r\n#     try:\r\n#         admin_sql = select(Admin).where(Admin.id == id)\r\n#         admin = db_session.execute(admin_sql).fetchone()\r\n#         result = []\r\n#         for consulta in admin:\r\n#             result.append(consulta.serialize())\r\n#         final = json.dumps(result)\r\n#         return Response(\r\n#             response=final,\r\n#             status=200,\r\n#             mimetype='application/json'\r\n#         )\r\n#     except Exception as e:\r\n#         final = {\r\n#             'status': 'error',\r\n#             'message': str(e)\r\n#         }\r\n#         return Response(\r\n#             response=json.dumps(final)\r\n#         )\r\n#\r\n#\r\n# @app.route('/admin', methods=['POST'])\r\n# def createAdmin():\r\n#     try:\r\n#         admin = Admin(\r\n#             nome=request.form['nome'],\r\n#             email=request.form['email'],\r\n#             senha=request.form['senha'],\r\n#             cpf=request.form['cpf']\r\n#         )\r\n#         admin.save()\r\n#         final = {\r\n#             'status': 'success',\r\n#             'message': 'Admin registrado com sucesso!',\r\n#             'nome': admin.nome,\r\n#             'email': admin.email,\r\n#             'senha': admin.senha,\r\n#             'cpf': admin.cpf,\r\n#         }\r\n#\r\n#         return Response(\r\n#             response=json.dumps(final),\r\n#             status=201,\r\n#             mimetype='application/json'\r\n#         )\r\n#     except Exception as e:\r\n#         final = {\r\n#             'status': 'error',\r\n#             'message': str(e),\r\n#         }\r\n#         return Response(\r\n#             response=json.dumps(final),\r\n#         )\r\n#\r\n#\r\n# @app.route('/admin/<int:id>', methods=['PUT'])\r\n# def updateAdmin(id):\r\n#     try:\r\n#         admin = select(Admin).where(Admin.id == id)\r\n#         admin = db_session.execute(admin).scalar()\r\n#         if request.form['nome']:\r\n#             admin.nome = request.form['nome']\r\n#         if request.form['email']:\r\n#             admin.email = request.form['email']\r\n#         if request.form['senha']:\r\n#             admin.senha = request.form['senha']\r\n#         if request.form['cpf']:\r\n#             admin.cpf = request.form['cpf']\r\n#         admin.save()\r\n#         final = {\r\n#             'status': 'success',\r\n#             'message': 'Admin atualizado com sucesso!',\r\n#             'nome': admin.nome,\r\n#             'email': admin.email,\r\n#             'senha': admin.senha,\r\n#             'cpf': admin.cpf\r\n#         }\r\n#         return Response(\r\n#             response=json.dumps(final),\r\n#             status=200,\r\n#             mimetype='application/json'\r\n#         )\r\n#     except Exception as e:\r\n#         final = {\r\n#             'status': 'error',\r\n#             'message': str(e)\r\n#         }\r\n#         return Response(\r\n#             response=json.dumps(final)\r\n#         )\r\n\r\n\r\n@app.route('/categorias', methods=['GET'])\r\ndef ListAllCategorias():\r\n    try:\r\n        categoria = select(Categoria).select_from(Categoria)\r\n        print(categoria)\r\n        categoria = db_session.execute(categoria).scalars()\r\n        result = []\r\n        for consulta in categoria:\r\n            result.append(consulta.serialize())\r\n        final = json.dumps(result)\r\n        return Response(\r\n            final,\r\n            status=200,\r\n            mimetype='application/json'\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e)\r\n        }\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n\r\n\r\n@app.route('/categoria/<int:id>', methods=['GET'])\r\ndef listCategoriaById(id):\r\n    try:\r\n        categoria_sql = select(Categoria).where(Categoria.id == id)\r\n        categoria = db_session.execute(categoria_sql).fetchone()\r\n        result = []\r\n        for consulta in categoria:\r\n            result.append(consulta.serialize())\r\n        final = json.dumps(result)\r\n        return Response(\r\n            response=final,\r\n            status=200,\r\n            mimetype='application/json'\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e)\r\n        }\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n\r\n\r\n@app.route('/categoria', methods=['POST'])\r\ndef createCategoria():\r\n    try:\r\n        categoria = Categoria(\r\n            nome=request.form['nome'],\r\n            icone=request.form['icone'],\r\n        )\r\n        categoria.save()\r\n        final = {\r\n            'status': 'success',\r\n            'message': 'Categoria registrada com sucesso!',\r\n            'nome': categoria.nome,\r\n            'icone': categoria.icone,\r\n        }\r\n\r\n        return Response(\r\n            response=json.dumps(final),\r\n            status=201,\r\n            mimetype='application/json'\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e),\r\n        }\r\n        return Response(\r\n            response=json.dumps(final),\r\n        )\r\n\r\n\r\n@app.route('/categoria/<int:id>', methods=['PUT'])\r\ndef updateCategoria(id):\r\n    try:\r\n        categoria = select(Categoria).where(Categoria.id == id)\r\n        categoria = db_session.execute(categoria).scalar()\r\n        if request.form['nome']:\r\n            categoria.nome = request.form['nome']\r\n        if request.form['icone']:\r\n            categoria.email = request.form['icone']\r\n        categoria.save()\r\n        final = {\r\n            'status': 'success',\r\n            'message': 'Categoria atualizado com sucesso!',\r\n            'nome': categoria.nome,\r\n            'icone': categoria.icone,\r\n        }\r\n        return Response(\r\n            response=json.dumps(final),\r\n            status=200,\r\n            mimetype='application/json'\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e)\r\n        }\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n\r\n\r\n@app.route('/categoria/<int:id>', methods=['POST'])\r\ndef deleteCategoria(id):\r\n    try:\r\n        categoria = select(Categoria).where(Categoria.id == id)\r\n        categoria = db_session.execute(categoria).scalar()\r\n        final = {\r\n            'status': 'sucess',\r\n            'message': categoria.nome + 'foi excluida'\r\n        }\r\n        categoria.delete()\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e)\r\n        }\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n\r\n#  pedro produto\r\n@app.route('/produtos', methods=['GET'])\r\ndef listAllProdutos():\r\n    try:\r\n        produto = select(Produto).select_from(Produto)\r\n        print(produto)\r\n        produto = db_session.execute(produto).scalars()\r\n        result = []\r\n        for consulta in produto:\r\n            result.append(consulta.serialize())\r\n        final = json.dumps(result)\r\n        return Response(\r\n            final,\r\n            status=200,\r\n            mimetype='application/json'\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e)\r\n        }\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n\r\n\r\n@app.route('/produto/<int:id>', methods=['GET'])\r\ndef listProdutoById(id):\r\n    try:\r\n        produto_sql = select(Produto).where(Produto.id == id)\r\n        produto = db_session.execute(produto_sql).fetchone()\r\n        result = []\r\n        for consulta in produto:\r\n            result.append(consulta.serialize())\r\n        final = json.dumps(result)\r\n        return Response(\r\n            response=final,\r\n            status=200,\r\n            mimetype='application/json'\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e)\r\n        }\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n\r\n@app.route('/produto', methods=['POST'])\r\ndef createProduto():\r\n    try:\r\n        produto = Produto(\r\n            nome=request.form['nome'],\r\n            preco=request.form['preco'],\r\n            descricao=request.form['descricao'],\r\n            imagem=request.form['imagem'],\r\n            categoria_id=request.form['categoria_id']\r\n        )\r\n        produto.save()\r\n        final = {\r\n            'status': 'success',\r\n            'message': 'Produto registrado com sucesso!',\r\n            'nome': produto.nome,\r\n            'descricao': produto.descricao,\r\n            'preco': produto.preco,\r\n            'categoria_id': produto.categoria_id,\r\n            'imagem': produto.imagem\r\n        }\r\n\r\n        return Response(\r\n            response=json.dumps(final),\r\n            status=201,\r\n            mimetype='application/json'\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e),\r\n        }\r\n        return Response(\r\n            response=json.dumps(final),\r\n        )\r\n\r\n\r\n@app.route('/produto/<int:id>', methods=['PUT'])\r\ndef updateProduto(id):\r\n    try:\r\n        produto = select(Produto).where(Produto.id == id)\r\n        produto = db_session.execute(produto).scalar()\r\n        if request.form['nome']:\r\n            produto.nome = request.form['nome']\r\n        if request.form['descricao']:\r\n            produto.descricao = request.form['descricao']\r\n        if request.form['imagem']:\r\n            produto.imagem = request.form['imagem']\r\n        if request.form['preco']:\r\n            produto.preco = request.form['preco']\r\n        produto.save()\r\n        final = {\r\n            'status': 'success',\r\n            'message': 'Produto atualizado com sucesso!',\r\n            'nome': produto.nome,\r\n            'descricao': produto.descricao,\r\n            'imagem': produto.imagem,\r\n            'preco': produto.preco,\r\n            'categoria_id': produto.categoria_id\r\n        }\r\n        return Response(\r\n            response=json.dumps(final),\r\n            status=200,\r\n            mimetype='application/json'\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e)\r\n        }\r\n    return Response(\r\n        response=json.dumps(final)\r\n    )\r\n\r\n@app.route('/produto/<int:id>', methods=['POST'])\r\ndef deleteProduto(id):\r\n    try:\r\n        produto = select(Produto).where(Produto.id == id)\r\n        produto = db_session.execute(produto).scalar()\r\n        final = {\r\n            'status': 'sucess',\r\n            'message': produto.nome + 'foi excluida'\r\n        }\r\n        produto.delete()\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e)\r\n        }\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n\r\n\r\n# VINICIUS HENRIQUE\r\n@app.route('/funcionario', methods=['POST'])\r\ndef createFuncionario():\r\n    try:\r\n        funcionario = Funcionario(\r\n            nome=request.form['nome'],\r\n            email=request.form['email'],\r\n            senha=request.form['senha'],\r\n            telefone=request.form['telefone'],\r\n        )\r\n        funcionario.save()\r\n        final = {\r\n            'status': 'success',\r\n            'message': 'Funcionario registrado com sucesso!',\r\n            'nome': funcionario.nome,\r\n            'email': funcionario.email,\r\n            'senha': funcionario.senha,\r\n            'telefone': funcionario.telefone,\r\n        }\r\n\r\n        return Response(\r\n            response=json.dumps(final),\r\n            status=201,\r\n            mimetype='application/json'\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e),\r\n        }\r\n        return Response(\r\n            response=json.dumps(final),\r\n        )\r\n\r\n\r\n@app.route('/funcionario/<int:id>', methods=['PUT'])\r\ndef updateFuncionario(id):\r\n    try:\r\n        funcionario = select(Funcionario).where(Funcionario.id == id)\r\n        funcionario = db_session.execute(funcionario).scalar()\r\n        if request.form['nome']:\r\n            funcionario.nome = request.form['nome']\r\n        if request.form['email']:\r\n            funcionario.email = request.form['email']\r\n        if request.form['senha']:\r\n            funcionario.senha = request.form['senha']\r\n        if request.form['telefone']:\r\n            funcionario.telefone = request.form['telefone']\r\n        funcionario.save()\r\n        final = {\r\n            'status': 'success',\r\n            'message': 'Funcionario atualizado com sucesso!',\r\n            'nome': funcionario.nome,\r\n            'email': funcionario.email,\r\n            'senha': funcionario.senha,\r\n            'telefone': funcionario.telefone\r\n        }\r\n        return Response(\r\n            response=json.dumps(final),\r\n            status=200,\r\n            mimetype='application/json'\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e)\r\n        }\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n\r\n\r\n@app.route('/funcionario', methods=['GET'])\r\ndef ListAllFuncionario():\r\n    try:\r\n        funcionario = select(Funcionario).select_from(Funcionario)\r\n        print(Funcionario)\r\n        funcionario = db_session.execute(funcionario).scalars()\r\n        result = []\r\n        for consulta in funcionario:\r\n            result.append(consulta.serialize())\r\n        final = json.dumps(result)\r\n        return Response(\r\n            final,\r\n            status=200,\r\n            mimetype='application/json'\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e)\r\n        }\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n\r\n\r\n@app.route('/funcionario/<int:id>', methods=['GET'])\r\ndef listFuncionarioById(id):\r\n    try:\r\n        funcionario_sql = select(Funcionario).where(Funcionario.id == id)\r\n        funcionario = db_session.execute(funcionario_sql).fetchone()\r\n        result = []\r\n        for consulta in funcionario:\r\n            result.append(consulta.serialize())\r\n        final = json.dumps(result)\r\n        return Response(\r\n            response=final,\r\n            status=200,\r\n            mimetype='application/json'\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e)\r\n        }\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n\r\n@app.route('/funcionario/<int:id>', methods=['POST'])\r\ndef deleteFuncionario(id):\r\n    try:\r\n        funcionario = select(Funcionario).where(Funcionario.id == id)\r\n        funcionario = db_session.execute(funcionario).scalar()\r\n        final = {\r\n            'status': 'sucess',\r\n            'message': funcionario.nome + 'foi excluida'\r\n        }\r\n        funcionario.delete()\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e)\r\n        }\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n\r\n@app.route('/ingrediente', methods=['POST'])\r\ndef createIngrediente():\r\n    try:\r\n        ingrediente = Ingrediente(\r\n            nome=request.form['nome'],\r\n            produto_id=request.form['produto_id'],\r\n        )\r\n        ingrediente.save()\r\n        final = {\r\n            'status': 'success',\r\n            'message': 'Funcionario registrado com sucesso!',\r\n            'nome': ingrediente.nome,\r\n            'produto_id': ingrediente.produto_id,\r\n        }\r\n        return Response(\r\n            response=json.dumps(final),\r\n            status=201,\r\n            mimetype='application/json'\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e),\r\n        }\r\n        return Response(\r\n            response=json.dumps(final),\r\n        )\r\n\r\n@app.route('/ingrediente/<int:id>', methods=['PUT'])\r\ndef updateIngrediente(id):\r\n    try:\r\n        ingrediente = select(Ingrediente).where(Ingrediente.id == id)\r\n        ingrediente = db_session.execute(ingrediente).scalar()\r\n        if request.form['nome']:\r\n            ingrediente.nome = request.form['nome']\r\n        if request.form['email']:\r\n            ingrediente.produto_id = request.form['produto_id']\r\n        final = {\r\n            'status': 'success',\r\n            'message': 'Funcionario atualizado com sucesso!',\r\n            'nome': ingrediente.nome,\r\n            'produto_id': ingrediente.produto_id,\r\n        }\r\n        return Response(\r\n            response=json.dumps(final),\r\n            status=200,\r\n            mimetype='application/json'\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e)\r\n        }\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n\r\n@app.route('/ingrediente', methods=['GET'])\r\ndef ListAllIngrediente():\r\n    try:\r\n        ingrediente = select(Ingrediente).select_from(Ingrediente)\r\n        print(Ingrediente)\r\n        ingrediente = db_session.execute(ingrediente).scalars()\r\n        result = []\r\n        for consulta in ingrediente:\r\n            result.append(consulta.serialize())\r\n        final = json.dumps(result)\r\n        return Response(\r\n            final,\r\n            status=200,\r\n            mimetype='application/json'\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e)\r\n        }\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n\r\n@app.route('/ingrediente/<int:id>', methods=['GET'])\r\ndef listIngredienteById(id):\r\n    try:\r\n        ingrediente_sql = select(Ingrediente).where(Ingrediente.id == id)\r\n        ingrediente = db_session.execute(ingrediente_sql).fetchone()\r\n        result = []\r\n        for consulta in ingrediente:\r\n            result.append(consulta.serialize())\r\n        final = json.dumps(result)\r\n        return Response(\r\n            response=final,\r\n            status=200,\r\n            mimetype='application/json'\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e)\r\n        }\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n\r\n@app.route('/ingrediente/<int:id>', methods=['POST'])\r\ndef deleteIngrediente(id):\r\n    try:\r\n        ingrediente = select(Ingrediente).where(Ingrediente.id == id)\r\n        ingrediente = db_session.execute(ingrediente).scalar()\r\n        final = {\r\n            'status': 'sucess',\r\n            'message': ingrediente.nome + 'foi excluida'\r\n        }\r\n        ingrediente.delete()\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e)\r\n        }\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n\r\n@app.route('/pedido', methods=['POST'])\r\ndef createPedido():\r\n    try:\r\n        pedido = Pedido(\r\n            mesa=request.form['mesa'],\r\n            status=request.form['status'],\r\n            dataCriado=request.form['dataCriado'],\r\n            funcionario_id=request.form['funcionario_id'],\r\n\r\n        )\r\n        pedido.save()\r\n        final = {\r\n            'status': 'success',\r\n            'message': 'Pedido registrado com sucesso!',\r\n            'mesa': pedido.mesa,\r\n            'status': pedido.status,\r\n            'dataCriado': pedido.dataCriado,\r\n            'funcionario_id': pedido.funcionario_id\r\n        }\r\n        return Response(\r\n            response=json.dumps(final),\r\n            status=201,\r\n            mimetype='application/json'\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e),\r\n        }\r\n        return Response(\r\n            response=json.dumps(final),\r\n        )\r\n\r\n@app.route('/pedido/<int:id>', methods=['PUT'])\r\ndef updatePedido(id):\r\n    try:\r\n        pedido = select(Pedido).where(Pedido.id == id)\r\n        pedido = db_session.execute(pedido).scalar()\r\n        if request.form['mesa']:\r\n            pedido.mesa = request.form['mesa']\r\n        if request.form['status']:\r\n            pedido.status = request.form['status']\r\n        if request.form['dataCriado']:\r\n            pedido.dataCriado = request.form['dataCriado']\r\n        if request.form['funcionario_id']:\r\n            pedido.funcionario_id = request.form['funcionario_id']\r\n        pedido.save()\r\n        final = {\r\n            'status': 'success',\r\n            'message': 'Pedido atualizado com sucesso!',\r\n            'mesa': pedido.mesa,\r\n            'status': pedido.status,\r\n            'dataCriado': pedido.dataCriado,\r\n            'funcionario_id': pedido.funcionario_id\r\n        }\r\n        return Response(\r\n            response=json.dumps(final),\r\n            status=200,\r\n            mimetype='application/json'\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e)\r\n        }\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n\r\n\r\n@app.route('/pedido/<int:id>', methods=['GET'])\r\ndef listPedidoById(id):\r\n    try:\r\n        pedido_sql = select(Pedido).where(Pedido.id == id)\r\n        pedido = db_session.execute(pedido_sql).fetchone()\r\n        result = []\r\n        for consulta in pedido:\r\n            result.append(consulta.serialize())\r\n        final = json.dumps(result)\r\n        return Response(\r\n            response=final,\r\n            status=200,\r\n            mimetype='application/json'\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e)\r\n        }\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n\r\n@app.route('/pedido', methods=['GET'])\r\ndef ListAllPedido():\r\n    try:\r\n        pedido = select(Pedido).select_from(Pedido)\r\n        print(Pedido)\r\n        pedido = db_session.execute(pedido).scalars()\r\n        result = []\r\n        for consulta in pedido:\r\n            result.append(consulta.serialize())\r\n        final = json.dumps(result)\r\n        return Response(\r\n            final,\r\n            status=200,\r\n            mimetype='application/json'\r\n        )\r\n    except Exception as e:\r\n        final = {\r\n            'status': 'error',\r\n            'message': str(e)\r\n        }\r\n        return Response(\r\n            response=json.dumps(final)\r\n        )\r\n\r\n\r\n\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app.py b/app.py
--- a/app.py	(revision 73a8682f4055097a47156141c0e890200478b235)
+++ b/app.py	(date 1733255895748)
@@ -321,7 +321,7 @@
             preco=request.form['preco'],
             descricao=request.form['descricao'],
             imagem=request.form['imagem'],
-            categoria_id=request.form['categoria_id']
+            categoria_id=int(request.form['categoria_id'])
         )
         produto.save()
         final = {
